{"version":3,"file":"navBar.vue2.js","sources":["../../../components/NavBar/navBar.vue"],"sourcesContent":["<template>\r\n  <div class=\"puri-screen-navbar-container\">\r\n    <nav class=\"puri-screen-navbar\" :style=\"`grid-template-columns: repeat(${col || items.length}, minmax(0, 1fr));`\">\r\n      <button\r\n        v-for=\"item in props.items\"\r\n        :class=\"item.name === model ? 'active' : undefined\"\r\n        @click=\"\r\n          model = item.name;\r\n          item.clickHander(item.name);\r\n        \">\r\n        <i class=\"bi\" :class=\"item.icon\"></i>\r\n        <span>{{ item.title }}</span>\r\n      </button>\r\n    </nav>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { NavBarItem } from \"../interface\";\r\nconst model = defineModel<string>();\r\nconst props = defineProps<{\r\n  col?: number;\r\n  items: NavBarItem[];\r\n}>();\r\n</script>\r\n\r\n<style scoped>\r\n.puri-screen-navbar-container {\r\n  @apply fixed bottom-0 w-full z-20 flex items-center justify-center;\r\n}\r\n.puri-screen-navbar {\r\n  @apply bg-white transition-all w-full dark:bg-neutral-800 dark:border-t border-neutral-700 border-opacity-50 shadow-md grid sm:w-2/3 md:w-1/3 xl:w-1/4 xxl:w-1/6 sm:rounded-xl sm:mb-2;\r\n}\r\n.puri-screen-navbar button {\r\n  @apply flex flex-col items-center justify-center py-2 rounded-md transition-transform active:scale-90 duration-300;\r\n}\r\n.puri-screen-navbar button i.bi {\r\n  @apply text-gray-400 dark:text-neutral-500 text-xl transition-colors;\r\n}\r\n.puri-screen-navbar button.active i.bi {\r\n  @apply text-primary-500 dark:text-primary-400;\r\n}\r\n.puri-screen-navbar button span {\r\n  @apply text-xs text-gray-400 dark:text-neutral-500 transition-colors;\r\n}\r\n.puri-screen-navbar button.active span {\r\n  @apply text-primary-500 dark:text-primary-400;\r\n}\r\n</style>\r\n"],"names":["model","_useModel","__props","props"],"mappings":";;AAmBM,QAAAA,IAAQC,EAAoBC,GAAA,YAC5BC,GAAAA,IAAQD;;;;;"}